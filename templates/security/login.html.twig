{% extends 'base.html.twig' %}

{% block title %}Log in!{% endblock %}

{% block body %}
<div style="display: flex; justify-content: center; margin-top: 10rem;">
    <div id="divLogin">
        <h2 class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">Connectez-vous</h2>

        <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">

            <form method="post" class="space-y-6" name="login">
                {% if error %}
                    <div class="alert alert-danger">{{ error.messageKey|trans(error.messageData, 'security') }}</div>
                {% endif %}

                {% if app.user %}
                    <div class="mb-3">
                        Connect√© en tant que {{ app.user.userIdentifier }}, <a href="{{ path('app_logout') }}">Deconnexion</a>
                    </div>
                {% endif %}

                 <div style="position:relative">
                    <label for="inputUsername" class="block text-sm font-medium leading-6 text-gray-900">Nom utilisateur</label>
                     <div class="mt-2">
                        <input type="text" value="{{ last_username }}" name="username" id="inputUsername" class="form-control block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-orange-900 sm:text-sm sm:leading-6" autocomplete="username" required autofocus>
                        <ul class="suggestionsArticle" id="suggestionsId"></ul>
                     </div>
                </div>

                <div>
                    <label for="inputPassword" class="block text-sm font-medium leading-6 text-gray-900">Mot de passe</label>
                    <div class="mt-2">
                        <input inputmode="numeric" type="password" name="password" id="inputPassword" class="form-control block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-orange-900 sm:text-sm sm:leading-6" autocomplete="current-password" required>
                    </div>
                </div>

                <input type="hidden" name="_csrf_token"
                       value="{{ csrf_token('authenticate') }}"
                >

                <div class="checkbox mb-3">
                    <label style="display: flex ; justify-content: center">
                        <input style="width: 10px ; margin-right: 10px" type="checkbox" name="_remember_me"> Se souvenir de moi
                    </label>
                </div>

                 <div>
                    <button type="submit" class="flex w-full justify-center rounded-md bg-orange-900 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-orange-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Connexion</button>
                </div>
            </form>
        </div>
    </div>
</div>


{% endblock %}


{% block javascripts %}

 <script>
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('inputPassword').addEventListener('input', function (e) {
            this.value = this.value.replace(/[^0-9]/g, '');
        });

        const searchId = document.getElementById('inputUsername');
        const suggestions = document.getElementById('suggestionsId');
        let debounceTimeout;

        searchId.addEventListener('input', function () {
            const mot = searchId.value;

            clearTimeout(debounceTimeout);
            debounceTimeout = setTimeout(() => {
                if (mot.length < 2) {
                    suggestions.style.display = 'none';
                    return;
                }

                fetch(`/login/autocomplete?mot=${encodeURIComponent(mot)}`)
                    .then(response => response.json())
                    .then(data => {
                        suggestions.innerHTML = '';
                        if (data.length > 0) {
                            suggestions.style.display = 'block';
                            data.forEach(item => {
                                const li = document.createElement('li');
                                li.innerHTML = '<strong>' + item.username + '</strong>';
                                li.addEventListener('click', () => {
                                    searchId.value = item.username;
                                    suggestions.style.display = 'none';
                                });
                                suggestions.appendChild(li);
                            });
                        } else {
                            suggestions.style.display = 'none';
                        }
                    });
            }, 500);
        });

        document.addEventListener('click', function (event) {
            if (!searchId.contains(event.target)) {
                suggestions.style.display = 'none';
            }
        });
    });
</script>


{% endblock %}